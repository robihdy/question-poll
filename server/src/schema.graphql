type Query {
  info: String!
  getQuestions: [Question!]!
  getEventByCode(code: String!): Event
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
  post(name: String!, code: String!): Event!
  ask(username: String!, description: String!, code: String!): Question!
  vote(questionId: ID!): Question
}

type Subscription {
  newQuestion: Question
  newVote: Question
}

type Question {
  id: ID!
  username: String!
  description: String!
  votes: Int!
  onEvent: Event
}

type Event {
  id: ID!
  name: String!
  code: String!
  postedBy: Organizer
  questions: [Question!]!
}

type Organizer {
  id: ID!
  name: String!
  email: String!
  events: [Event!]!
}

type AuthPayload {
  token: String
  organizer: Organizer
}
